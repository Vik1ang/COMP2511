diff --git a/tute08/src/fs/model/Inode.java b/tute08/src/fs/model/Inode.java
new file mode 100644
index 0000000..0ad12b1
--- /dev/null
+++ b/tute08/src/fs/model/Inode.java
# now we know what is common so we can now define this 'base' class.

@@ -0,0 +1,36 @@
+package fs.model;
+
+import java.io.IOException;
+import java.nio.file.Files;
+import java.nio.file.Path;
+
+/**
+ * 'entity' in the file system, could be a folder or a file
+ * 
+ * TreeItem's aren't nodes they are the model representation of a TreeCell
+ */
+public abstract class Inode {
+    private String path;
+    private long fileSize;
+
# we can give it a reasonable default for file size, since even folders will have a file size
# to hold the metadata about the folder (that will be added with the size of the folder's inner contents)
+    public Inode(Path path) {
+        this.path = path.toString();
+        try {
+            this.fileSize = Files.size(path);
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+    }
+
+    public String getPath() {
+        return this.path;
+    }
+
+    public long getFileSize() {
+        return fileSize;
+    }
+
+    public abstract String getName();
+
+    public abstract String getIcon(boolean isExpanded);
+}
